{"severity":null,"file_name":"/home/bheshaj/steampipe-mod-kubernetes-compliance/cis_kube_v120/cis_kube_v120_v100.sp","documentation":"## Description\n\nDo not generally permit containers to be run with the **securityContext.privileged** flag\nset to **true**.\n\nPrivileged containers have access to all Linux Kernel capabilities and devices. A container\nrunning with full privileges can do almost everything that the host can do. This flag exists\nto allow special use-cases, like manipulating the network stack and accessing devices.\nThere should be at least one PodSecurityPolicy (PSP) defined which does not permit\nprivileged containers.\n\nIf you need to run privileged containers, this should be defined in a separate PSP and you\nshould carefully check RBAC controls to ensure that only limited service accounts and\nusers are given permission to access that PSP.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the **.spec.privileged** field is **omitted** or set to **false**.\n\n**References**\n\n1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies","query":"kubernetes_compliance.query.pod_security_policy_container_privilege_disabled","description":"Privileged containers have access to all Linux Kernel capabilities and devices. A container running with full privileges can do almost everything that the host can do. This flag exists to allow special use-cases, like manipulating the network stack and accessing devices. There should be at least one PodSecurityPolicy (PSP) defined which does not permit privileged containers.","end_line_number":112,"params":null,"start_line_number":100,"title":"5.2.1 Minimize the admission of privileged containers","type":null,"mod_name":"kubernetes_compliance","sql":null,"tags":{"plugin":"kubernetes","cis_item_id":"5.2.1","cis_version":"v1.0.0","service":"Kubernetes/PodSecurityPolicy","cis_section_id":"5.2","kubernetes_version":"v1.20","category":"Compliance","cis":"true","cis_type":"automated","cis_level":"1"},"args":{"args_list":null,"refs":null},"auto_generated":false,"path":[["mod.kubernetes_compliance","kubernetes_compliance.benchmark.cis_kube_v120","kubernetes_compliance.benchmark.cis_kube_v120_v100","kubernetes_compliance.benchmark.cis_kube_v120_v100_5","kubernetes_compliance.benchmark.cis_kube_v120_v100_5_2","kubernetes_compliance.control.cis_kube_v120_v100_5_2_1"]],"qualified_name":"kubernetes_compliance.control.cis_kube_v120_v100_5_2_1","source_definition":"control \"cis_kube_v120_v100_5_2_1\" {\n  title         = \"5.2.1 Minimize the admission of privileged containers\"\n  description   = \"Privileged containers have access to all Linux Kernel capabilities and devices. A container running with full privileges can do almost everything that the host can do. This flag exists to allow special use-cases, like manipulating the network stack and accessing devices. There should be at least one PodSecurityPolicy (PSP) defined which does not permit privileged containers.\"\n  query         = query.pod_security_policy_container_privilege_disabled\n  documentation = file(\"./cis_kube_v120/docs/cis_kube_v120_v100_5_2_1.md\")\n\n  tags = merge(local.cis_kube_v120_v100_5_2_common_tags, {\n    cis_level   = \"1\"\n    cis_item_id = \"5.2.1\"\n    cis_type    = \"automated\"\n    service     = \"Kubernetes/PodSecurityPolicy\"\n  })\n}","is_anonymous":false,"width":null,"resource_name":"cis_kube_v120_v100_5_2_1"}