{"severity":null,"file_name":"/home/bheshaj/steampipe-mod-kubernetes-compliance/cis_kube_v120/cis_kube_v120_v100.sp","documentation":"## Description\n\nDo not generally permit containers to be run with the **allowPrivilegeEscalation** flag set\nto **true**.\n\nA container running with the allowPrivilegeEscalation flag set to true may have\nprocesses that can gain more privileges than their parent.\n\nThere should be at least one PodSecurityPolicy (PSP) defined which does not permit\ncontainers to allow privilege escalation. The option exists (and is defaulted to true) to\npermit setuid binaries to run.\n\nIf you have need to run containers which use setuid binaries or require privilege escalation,\nthis should be defined in a separate PSP and you should carefully check RBAC controls to\nensure that only limited service accounts and users are given permission to access that\nPSP.\n\n## Remediation\n\nCreate a PSP as described in the Kubernetes documentation, ensuring that the **.spec.allowPrivilegeEscalation** field is **omitted** or set to **false**.\n\n**References**\n\n1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/","query":"kubernetes_compliance.query.pod_security_policy_container_privilege_escalation_disabled","description":"A container running with the `allowPrivilegeEscalation` flag set to true may have processes that can gain more privileges than their parent. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to allow privilege escalation. The option exists (and is defaulted to true) to permit setuid binaries to run.","end_line_number":168,"params":null,"start_line_number":156,"title":"5.2.5 Minimize the admission of containers with allowPrivilegeEscalation","type":null,"mod_name":"kubernetes_compliance","sql":null,"tags":{"plugin":"kubernetes","cis_item_id":"5.2.5","cis_version":"v1.0.0","service":"Kubernetes/PodSecurityPolicy","cis_section_id":"5.2","kubernetes_version":"v1.20","category":"Compliance","cis":"true","cis_type":"automated","cis_level":"1"},"args":{"args_list":null,"refs":null},"auto_generated":false,"path":[["mod.kubernetes_compliance","kubernetes_compliance.benchmark.cis_kube_v120","kubernetes_compliance.benchmark.cis_kube_v120_v100","kubernetes_compliance.benchmark.cis_kube_v120_v100_5","kubernetes_compliance.benchmark.cis_kube_v120_v100_5_2","kubernetes_compliance.control.cis_kube_v120_v100_5_2_1"]],"qualified_name":"kubernetes_compliance.control.cis_kube_v120_v100_5_2_5","source_definition":"control \"cis_kube_v120_v100_5_2_5\" {\n  title         = \"5.2.5 Minimize the admission of containers with allowPrivilegeEscalation\"\n  description   = \"A container running with the `allowPrivilegeEscalation` flag set to true may have processes that can gain more privileges than their parent. There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to allow privilege escalation. The option exists (and is defaulted to true) to permit setuid binaries to run.\"\n  query         = query.pod_security_policy_container_privilege_escalation_disabled\n  documentation = file(\"./cis_kube_v120/docs/cis_kube_v120_v100_5_2_5.md\")\n\n  tags = merge(local.cis_kube_v120_v100_5_2_common_tags, {\n    cis_level   = \"1\"\n    cis_item_id = \"5.2.5\"\n    cis_type    = \"automated\"\n    service     = \"Kubernetes/PodSecurityPolicy\"\n  })\n}","is_anonymous":false,"width":null,"resource_name":"cis_kube_v120_v100_5_2_5"}